(djangopy3Env) C:\Users\Admin\Desktop\python_stack\django\django_intro\dojo_ninja_proj>python manage.py makemigrations
Migrations for 'dojo_ninjas_app':
  dojo_ninjas_app\migrations\0001_initial.py
    - Create model Dojo
    - Create model Ninjas

(djangopy3Env) C:\Users\Admin\Desktop\python_stack\django\django_intro\dojo_ninja_proj>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying dojo_ninjas_app.0001_initial... OK
  Applying sessions.0001_initial... OK

(djangopy3Env) C:\Users\Admin\Desktop\python_stack\django\django_intro\dojo_ninja_proj>python manage.py shell
Python 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from dojo_ninjas_app.models import *
>>> Dojo.objects.all()
<QuerySet []>
>>> Dojo.objects.create(name = "alpha", city = "burbank", state = "california")
<Dojo: Dojo object (1)>
>>> Dojo.objects.create(name = "beta", city = "los angeles", state = "nevada")
<Dojo: Dojo object (2)>
>>> Dojo.objects.create(name = "omega", city = "washington", state =" washington")
<Dojo: Dojo object (3)>
>>> Dojo.objects.get(id=1).delete()
(1, {'dojo_ninjas_app.Ninjas': 0, 'dojo_ninjas_app.Dojo': 1})
>>> Dojo.objects.create(name = "la", city = "los angeles", state = "california")
<Dojo: Dojo object (4)>
>>> Dojo.objects.create(name = "nv", city = "nevada", state = "nevada")
<Dojo: Dojo object (5)>
>>> Dojo.objects.create(name = "Dc", city = "washington dc", state = "washinton")
<Dojo: Dojo object (6)>
>>> Ninja.objects.create(first_name = "mario", last_name = "bartolo", dojo = Dojo.objects.get(id=4))
<Ninja: Ninja object (1)>
>>> Ninja.objects.create(first_name ="bart", last_name = "olo", dojo = Dojo.objects.get(id=5))
<Ninja: Ninja object (2)>
>>> Ninja.objects.create(first_name = "bartz", last_name = "illa", dojo = Dojo.objects.get(id=6))
<Ninja: Ninja object (3)>
>>> Ninja.objects.create(first_name = "mad", last_name = "max", dojo = Dojo.objects.get(id=4))
<Ninja: Ninja object (4)>
>>> Ninja.objects.create(first_name = "eric", last_name = "cartmen", dojo = Dojo.objects.get(id=4))
<Ninja: Ninja object (5)>
>>> Ninja.objects.create(first_name = "stan", last_name = "marsh", dojo = Dojo.objects.get(id=5))
<Ninja: Ninja object (6)>
>>> Ninja.objects.create(first_name = "kenny", last_name = "Mccormic", dojo = Dojo.objects.get(id=5))
<Ninja: Ninja object (7)>
<Ninja: Ninja object (8)>
>>> Ninja.objects.create(first_name = "the", last_name = "moth", dojo = Dojo.objects.get(id=6))
<Ninja: Ninja object (9)>
>>> Ninja.objects.filter(dojo = Dojo.objects.get(id=4))
<QuerySet [<Ninja: Ninja object (1)>, <Ninja: Ninja object (4)>, <Ninja: Ninja object (5)>]>
>>> Ninja.objects.filter(dojo = Dojo.objects.get(id=6))
<QuerySet [<Ninja: Ninja object (3)>, <Ninja: Ninja object (8)>, <Ninja: Ninja object (9)>]>
>>> thisdojo=Dojo.objects.get(id=4)
>>> thisdojo.ninjas.all()
<QuerySet [<Ninja: Ninja object (1)>, <Ninja: Ninja object (4)>, <Ninja: Ninja object (5)>]>
>>> dojo5=Dojo.objects.get(id=5)
>>> dojo5.ninjas.all()
<QuerySet [<Ninja: Ninja object (2)>, <Ninja: Ninja object (6)>, <Ninja: Ninja object (7)>]>
>>> n1 = Ninja.objects.last()
>>> n1.dojo
<Dojo: Dojo object (6)>
>>> n1.dojo.__dict__
{'_state': <django.db.models.base.ModelState object at 0x000002584DA09970>, 'id': 6, 'name': 'Dc', 'city': 'washington dc', 'state': 'washinton', 'updated_at': datetime.date(2021, 1, 15), 'created_at': datetime.date(2021, 1, 15)}
>>> n1.dojo.name
'Dc'
>>> exit()

(djangopy3Env) C:\Users\Admin\Desktop\python_stack\django\django_intro\dojo_ninja_proj>python manage.py makemigrations
You are trying to add a non-nullable field 'desc' to dojo without a default; we can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 1
Please enter the default value now, as valid Python
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now
Type 'exit' to exit this prompt
>>> "old dojo"
Migrations for 'dojo_ninjas_app':
  dojo_ninjas_app\migrations\0004_dojo_desc.py
    - Add field desc to dojo

(djangopy3Env) C:\Users\Admin\Desktop\python_stack\django\django_intro\dojo_ninja_proj>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  Applying dojo_ninjas_app.0004_dojo_desc... OK

(djangopy3Env) C:\Users\Admin\Desktop\python_stack\django\django_intro\dojo_ninja_proj>python manage.py shell
Python 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from dojo_ninjas_app.models import *
>>> Dojo.objects.create(name = "new dojo", city = "burbank", state ="ca", desc = "literally a new dojo")
<Dojo: Dojo object (7)>
>>> exit()